import './styles/index.css';
import React, { useEffect } from 'react';
import WebApp from '@twa-dev/sdk';
import { useApp } from '../../hooks';
import Form from '../Form/Form';
import Result from '../Result/Result';

const Fact = () => {
  const { setCalcType, formatPrice, formatNumber } = useApp();

  const [budget, setBudget] = React.useState('');
  const [cpc, setCpc] = React.useState('');
  const [leads, setLeads] = React.useState('');
  const [buyers, setBuyers] = React.useState('');
  const [averageSales, setAverageSales] = React.useState('');
  const [margin, setMargin] = React.useState('');
  const [retention, setRetention] = React.useState('');

  const [groups, setGroups] = React.useState([]);
  const [canCalculate, setCanCalculate] = React.useState(false);
  const [results, setResults] = React.useState([]);

  useEffect(() => {
    WebApp.BackButton.onClick(() => {
      setCalcType(null);
    });
    WebApp.BackButton.show();
  }, []);

  useEffect(() => {
    setGroups([
      {
        title: '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–µ–∫–ª–∞–º–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏',
        fields: [
          {
            label: 'üí∞ –ë—é–¥–∂–µ—Ç (Budget)',
            caption: '–ë—é–¥–∂–µ—Ç —Ä–µ–∫–ª–∞–º–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏',
            name: 'budget',
            value: budget,
            formattedValue: formatPrice(budget),
            setValue: setBudget,
            unit: '—Ä—É–±.',
          },
          {
            label: 'üí∏ CPC',
            caption: '–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç',
            name: 'cpc',
            value: cpc,
            formattedValue: formatPrice(cpc),
            setValue: setCpc,
            unit: '—Ä—É–±.',
          },
        ],
      },
      {
        title: '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–æ–¥–∞–∂',
        fields: [
          {
            label: 'üì© –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫ (Leads)',
            caption: '–ö–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫ –∏ –æ–±—Ä–∞—â–µ–Ω–∏–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏',
            name: 'leads',
            value: leads,
            formattedValue: formatNumber(leads),
            setValue: setLeads,
            unit: '—à—Ç.',
          },
          {
            label: 'üõç –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ (Buyers)',
            caption: '–ö–∞–∫–æ–µ –±—ã–ª–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂',
            name: 'buyers',
            value: buyers,
            formattedValue: formatNumber(buyers),
            setValue: setBuyers,
            unit: '—à—Ç.',
          },
        ],
      },
      {
        title: '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –±–∏–∑–Ω–µ—Å –º–æ–¥–µ–ª–∏',
        fields: [
          {
            label: 'üõí –°—Ä–µ–¥–Ω–∏–π —á–µ–∫ (Average Sales)',
            caption: '–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É –≤ —Å—Ä–µ–¥–Ω–µ–º –ø–æ–∫—É–ø–∞–µ—Ç –æ–¥–∏–Ω –∫–ª–∏–µ–Ω—Ç',
            name: 'averageSales',
            value: averageSales,
            formattedValue: formatPrice(averageSales),
            setValue: setAverageSales,
            unit: '—Ä—É–±.',
          },
          {
            label: 'üìä –ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å (Margin)',
            caption:
              '–ö–∞–∫–æ–π % –≤—ã—Ä—É—á–∫–∏ –æ—Å—Ç–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–æ–≤ (–∑–∞ –≤—ã—á–µ—Ç–æ–º —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏) –∏–ª–∏ –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥',
            name: 'margin',
            value: margin,
            formattedValue: formatNumber(margin),
            setValue: setMargin,
            unit: '%',
          },
          {
            label: 'üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞ (Retention)',
            caption:
              '–°–∫–æ–ª—å–∫–æ –ø–æ–∫—É–ø–æ–∫ —Å–æ–≤–µ—Ä—à–∞–µ—Ç –æ–¥–∏–Ω –∫–ª–∏–µ–Ω—Ç –∑–∞ –≤–µ—Å—å –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª. –¶–µ–ª—å –ª—é–±–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞ —É–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –∫–∞–∫ –º–æ–∂–Ω–æ –¥–æ–ª—å—à–µ',
            name: 'retention',
            value: retention,
            formattedValue: formatNumber(retention),
            setValue: setRetention,
            unit: '—à—Ç.',
          },
        ],
      },
    ]);

    setCanCalculate(
      Boolean(
        budget !== ''
          && cpc !== ''
          && leads !== ''
          && buyers !== ''
          && averageSales !== ''
          && margin !== ''
          && retention !== '',
      ),
    );
  }, [budget, cpc, leads, buyers, averageSales, margin, retention]);

  useEffect(() => {
    if (!canCalculate) {
      setResults([]);
      return;
    }

    const ltv = averageSales * (margin / 100) * retention;
    const profitPerCustomer = ltv - budget / buyers;
    const totalProfit = ltv * buyers - budget;
    const porogCpc = (ltv * buyers) / (budget / cpc);
    const porogCpa = (ltv * buyers) / leads;
    const cr1 = (leads / (budget / cpc)) * 100;
    const cr2 = (buyers / leads) * 100;
    const cpa = budget / leads;
    const costPerAquisition = budget / buyers;
    const totalRevenue = buyers * averageSales * retention;
    const firstSaleProfit = averageSales * (margin / 100) - costPerAquisition;

    setResults([
      {
        type: 'main',
        title: 'üíµ –ü–æ—Ä–æ–≥–æ–≤—ã–π CPC',
        caption:
          '–í—ã –º–æ–∂–µ—Ç–µ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –±—é–¥–∂–µ—Ç –∏ –æ—Ö–≤–∞—Ç—ã, –ø–æ–≤—ã—à–∞—è CPC –¥–æ —ç—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è, –æ—Å—Ç–∞–≤–∞—è—Å—å –ø—Ä–∏–±—ã–ª—å–Ω—ã–º–∏',
        value: porogCpc,
        formattedValue: formatPrice(porogCpc),
        unit: '—Ä—É–±.',
        isInvalid: porogCpc < 0,
      },
      {
        type: 'main',
        title: 'üéØ –ü–æ—Ä–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞—è–≤–∫–∏ (CPA)',
        caption: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–π –∑–∞—è–≤–∫–∏, –∫–æ—Ç–æ—Ä—É—é –≤—ã –º–æ–∂–µ—Ç–µ —Å–µ–±–µ –ø–æ–∑–≤–æ–ª–∏—Ç—å',
        value: porogCpa,
        formattedValue: formatPrice(porogCpa),
        unit: '—Ä—É–±.',
        isInvalid: porogCpa < 0,
      },
      {
        title: 'üìà –ö–æ–Ω–≤–µ—Ä—Å–∏—è —Å–∞–π—Ç–∞ (CR1)',
        caption:
          '–ö–∞–∫–æ–π % –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞ –æ—Å—Ç–∞–≤—è—Ç –∑–∞–∫–∞–∑ –∏–ª–∏ —Å–≤—è–∂—É—Ç—Å—è —Å –≤–∞–º–∏ = –Ω–∞ —Å–∫–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à –≤–∞—à —Å–∞–π—Ç',
        value: cr1,
        formattedValue: formatNumber(cr1),
        unit: '%',
        isInvalid: cr1 < 0,
      },
      {
        title: 'üí¨ –ö–æ–Ω–≤–µ—Ä—Å–∏—è –æ—Ç–¥–µ–ª–∞ –ø—Ä–æ–¥–∞–∂ (CR2)',
        caption:
          '–ö–∞–∫–æ–π % –æ–±—Ä–∞—â–µ–Ω–∏–π –ø—Ä–µ–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏ = –∫–∞–∫ —Ö–æ—Ä–æ—à–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–∞—à –æ—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂',
        value: cr2,
        formattedValue: formatNumber(cr2),
        unit: '%',
        isInvalid: cr2 < 0,
      },
      {
        title: 'üìâ –°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞—è–≤–∫–∏ (CPA)',
        caption:
          '–¢–µ–∫—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞—è–≤–∫–∏. –ï—Å–ª–∏ –æ–Ω–∞ –Ω–∏–∂–µ –ø–æ—Ä–æ–≥–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, —Ç–æ –≤—ã –ø—Ä–∏–±—ã–ª—å–Ω—ã –∏ –æ–±—è–∑–∞–Ω—ã –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å—Å—è',
        value: cpa,
        formattedValue: formatPrice(cpa),
        unit: '—Ä—É–±.',
        isInvalid: cpa < 0,
      },
      {
        title: 'üè∑ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ (Cost Per Acquisition)',
        caption:
          '–í–æ —Å–∫–æ–ª—å–∫–æ –≤–∞–º –æ–±—Ö–æ–¥–∏—Ç—Å—è –∫–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç. –í—ã –º–æ–∂–µ—Ç–µ —Å–Ω–∏–∂–∞—Ç—å –µ–µ, –ø–æ–≤—ã—à–∞—è –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫',
        value: costPerAquisition,
        formattedValue: formatPrice(costPerAquisition),
        unit: '—Ä—É–±.',
        isInvalid: costPerAquisition < 0,
      },
      {
        title: 'üí∞ –í—ã—Ä—É—á–∫–∞ —Å –∫–ª–∏–µ–Ω—Ç–∞ (Average Revenue Per User)',
        caption: '–°–∫–æ–ª—å–∫–æ –ø–ª–∞—Ç–∏—Ç –≤–∞–º –∫–ª–∏–µ–Ω—Ç –∑–∞ –≤–µ—Å—å –µ–≥–æ –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª',
        value: ltv,
        formattedValue: formatPrice(ltv),
        unit: '—Ä—É–±.',
        isInvalid: ltv < 0,
      },
      {
        title: 'üìà –û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞ (Total Revenue)',
        caption: '–î–ª—è –µ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤. –•–æ—Ç–∏—Ç–µ –∑–Ω–∞—Ç—å –∫–∞–∫–∏—Ö?',
        value: totalRevenue,
        formattedValue: formatPrice(totalRevenue),
        unit: '—Ä—É–±.',
        isInvalid: totalRevenue < 0,
      },
      {
        title: 'üí° –ü—Ä–∏–±—ã–ª—å —Å –ø–µ—Ä–≤–æ–π –ø—Ä–æ–¥–∞–∂–∏ (1st Sale Profit)',
        caption: '–ß–∞—Å—Ç–æ, –ø—Ä–æ–¥–∞–≤–∞—è –≤ ¬´–º–∏–Ω—É—Å¬ª –ø–µ—Ä–≤—ã–π —Ä–∞–∑ –≤—ã –æ—Å—Ç–∞–µ—Ç–µ—Å—å –ø—Ä–∏–±—ã–ª—å–Ω—ã–º–∏',
        value: firstSaleProfit,
        formattedValue: formatPrice(firstSaleProfit),
        unit: '—Ä—É–±.',
        isInvalid: firstSaleProfit < 0,
      },
      {
        title: 'üîÑ –ü—Ä–∏–±—ã–ª—å —Å –∫–ª–∏–µ–Ω—Ç–∞ (LTV)',
        caption: '–í–∞—à —á–∏—Å—Ç—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –æ–¥–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –∑–∞ –≤–µ—Å—å –µ–≥–æ –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª',
        value: profitPerCustomer,
        formattedValue: formatPrice(profitPerCustomer),
        unit: '—Ä—É–±.',
        isInvalid: profitPerCustomer < 0,
      },
      {
        title: 'üìä –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å (Total Profit)',
        caption: '–í–∞—à –∏—Ç–æ–≥–æ–≤—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç',
        value: totalProfit,
        formattedValue: formatPrice(totalProfit),
        unit: '—Ä—É–±.',
        isInvalid: totalProfit < 0,
      },
    ]);
  }, [budget, cpc, leads, buyers, averageSales, margin, retention, canCalculate]);

  return (
    <>
      <Form>
        <Form.Header>
          <Form.Title>–†–∞—Å—á—ë—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞</Form.Title>
          <Form.Caption>
            –í—Å—Ç–∞–≤—å—Ç–µ –ø—Ä–æ–≥–Ω–æ–∑–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–∫–æ–π –ø–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
          </Form.Caption>
        </Form.Header>
        {groups.map((group, index) => (
          <Form.Group title={group.title} key={index}>
            {group.fields.map((field) => (
              <Form.Field
                key={field.name}
                label={field.label}
                caption={field.caption}
                name={field.name}
                value={field.value}
                setValue={field.setValue}
                unit={field.unit}
              />
            ))}
          </Form.Group>
        ))}
      </Form>

      {results.length !== 0 && <Result groups={groups} results={results} />}
    </>
  );
};

export default Fact;
